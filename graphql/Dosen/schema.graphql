type Dosen {
    id: ID!
    user_id: Int!
    nidn: String!
    nip: String
    nama_lengkap: String!
    gelar_depan: String
    gelar_belakang: String
    jurusan_id: Int!
    jenis_kelamin: String!
    tempat_lahir: String
    tanggal_lahir: DateTime
    alamat: String
    no_hp: String
    email_pribadi: String
    status_kepegawaian: String!
    jabatan: String
    status: String!
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
    
    # Relations
    user: User! @belongsTo
    jurusan: Jurusan! @belongsTo
    kelas: [Kelas!]! @hasMany
    krsPembimbingAkademik: [Krs!]! @hasMany(relation: "dosenPa")
}

input CreateDosenInput {
    user_id: Int!
    nidn: String!
    nip: String
    nama_lengkap: String!
    gelar_depan: String
    gelar_belakang: String
    jurusan_id: Int!
    jenis_kelamin: String!
    tempat_lahir: String
    tanggal_lahir: DateTime
    alamat: String
    no_hp: String
    email_pribadi: String
    status_kepegawaian: String
    jabatan: String
    status: String
}

input UpdateDosenInput {
    id: Int
    user_id: Int
    nidn: String
    nip: String
    nama_lengkap: String
    gelar_depan: String
    gelar_belakang: String
    jurusan_id: Int
    jenis_kelamin: String
    tempat_lahir: String
    tanggal_lahir: DateTime
    alamat: String
    no_hp: String
    email_pribadi: String
    status_kepegawaian: String
    jabatan: String
    status: String
}

type DosenPaginator {
    data: [Dosen]!
    paginatorInfo: PageInfo!
}

type PageInfo {
    hasMorePages: Boolean!
    currentPage: Int!
    lastPage: Int!
    perPage: Int!
    total: Int!
}

extend type Query{
    allDosen: [Dosen!]! @all(model: "Dosen\\Dosen")
    Dosen(id: ID! @eq(key: "id")): Dosen @find(model: "Dosen\\Dosen")
    allDosenPaginate(
            search: String
            first: Int
            page: Int
        ): DosenPaginator @field(resolver: "App\\GraphQL\\Dosen\\Queries\\DosenQuery@all")   
    DosenByNama(
        nama: String! @where(operator: "like", key: "nama_lengkap")
    ): [Dosen]! @all(model: "Dosen\\Dosen")
    allDosenArsip(
        search: String
        first: Int
        page: Int
    ): DosenPaginator @field(resolver: "App\\GraphQL\\Dosen\\Queries\\DosenQuery@allArsip")
}

extend type Mutation {
  createDosen(input: CreateDosenInput! @spread): Dosen
    @create(model: "Dosen\\Dosen")

  updateDosen(
    id: ID! @eq(key: "id"),
    input: UpdateDosenInput! @spread
  ): Dosen
    @update(model: "Dosen\\Dosen")

  deleteDosen(id: ID! @eq(key: "id")): Dosen
    @delete(model: "Dosen\\Dosen")

  restoreDosen(id: ID!): Dosen
    @field(resolver: "Dosen\\Mutations\\DosenMutation@restore")

  forceDeleteDosen(id: ID!): Dosen
    @field(resolver: "Dosen\\Mutations\\DosenMutation@forceDelete")
}
